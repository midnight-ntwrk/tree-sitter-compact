{
  "$schema": "https://tree-sitter.github.io/tree-sitter/assets/schemas/grammar.schema.json",
  "name": "compact",
  "rules": {
    "source_file": {
      "type": "REPEAT",
      "content": {
        "type": "SYMBOL",
        "name": "pelt"
      }
    },
    "pelt": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "pragma"
        },
        {
          "type": "SYMBOL",
          "name": "incld"
        },
        {
          "type": "SYMBOL",
          "name": "mdefn"
        }
      ]
    },
    "pragma": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "pragma"
        },
        {
          "type": "SYMBOL",
          "name": "id"
        },
        {
          "type": "SYMBOL",
          "name": "_version_expr"
        },
        {
          "type": "STRING",
          "value": ";"
        }
      ]
    },
    "_version_expr": {
      "type": "PREC_LEFT",
      "value": 1,
      "content": {
        "type": "CHOICE",
        "members": [
          {
            "type": "SEQ",
            "members": [
              {
                "type": "SYMBOL",
                "name": "_version_expr"
              },
              {
                "type": "SYMBOL",
                "name": "or"
              },
              {
                "type": "SYMBOL",
                "name": "_version_expr0"
              }
            ]
          },
          {
            "type": "SYMBOL",
            "name": "_version_expr0"
          }
        ]
      }
    },
    "_version_expr0": {
      "type": "PREC_LEFT",
      "value": 2,
      "content": {
        "type": "CHOICE",
        "members": [
          {
            "type": "SEQ",
            "members": [
              {
                "type": "SYMBOL",
                "name": "_version_expr0"
              },
              {
                "type": "SYMBOL",
                "name": "and"
              },
              {
                "type": "SYMBOL",
                "name": "_version_term"
              }
            ]
          },
          {
            "type": "SYMBOL",
            "name": "_version_term"
          }
        ]
      }
    },
    "_version_term": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "_version_atom"
        },
        {
          "type": "SEQ",
          "members": [
            {
              "type": "SYMBOL",
              "name": "_version_op"
            },
            {
              "type": "SYMBOL",
              "name": "_version_atom"
            }
          ]
        },
        {
          "type": "SEQ",
          "members": [
            {
              "type": "STRING",
              "value": "("
            },
            {
              "type": "SYMBOL",
              "name": "_version_expr"
            },
            {
              "type": "STRING",
              "value": ")"
            }
          ]
        }
      ]
    },
    "_version_atom": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "nat"
        },
        {
          "type": "SYMBOL",
          "name": "version"
        }
      ]
    },
    "_version_op": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "not"
        },
        {
          "type": "SYMBOL",
          "name": "greater_than"
        },
        {
          "type": "SYMBOL",
          "name": "less_than"
        },
        {
          "type": "SYMBOL",
          "name": "greater_than_or_equal"
        },
        {
          "type": "SYMBOL",
          "name": "less_than_or_equal"
        }
      ]
    },
    "incld": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "include"
        },
        {
          "type": "SYMBOL",
          "name": "file"
        },
        {
          "type": "STRING",
          "value": ";"
        }
      ]
    },
    "mdefn": {
      "type": "SEQ",
      "members": [
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SYMBOL",
              "name": "export"
            },
            {
              "type": "BLANK"
            }
          ]
        },
        {
          "type": "STRING",
          "value": "module"
        },
        {
          "type": "SYMBOL",
          "name": "module_name"
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SYMBOL",
              "name": "gparams"
            },
            {
              "type": "BLANK"
            }
          ]
        },
        {
          "type": "STRING",
          "value": "{"
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "SYMBOL",
            "name": "pelt"
          }
        },
        {
          "type": "STRING",
          "value": "}"
        }
      ]
    },
    "gparams": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "<"
        },
        {
          "type": "SEQ",
          "members": [
            {
              "type": "SYMBOL",
              "name": "generic_param"
            },
            {
              "type": "REPEAT",
              "content": {
                "type": "SEQ",
                "members": [
                  {
                    "type": "STRING",
                    "value": ","
                  },
                  {
                    "type": "SYMBOL",
                    "name": "generic_param"
                  }
                ]
              }
            },
            {
              "type": "CHOICE",
              "members": [
                {
                  "type": "STRING",
                  "value": ","
                },
                {
                  "type": "BLANK"
                }
              ]
            }
          ]
        },
        {
          "type": "STRING",
          "value": ">"
        }
      ]
    },
    "generic_param": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SEQ",
          "members": [
            {
              "type": "STRING",
              "value": "#"
            },
            {
              "type": "SYMBOL",
              "name": "tvar_name"
            }
          ]
        },
        {
          "type": "SYMBOL",
          "name": "tvar_name"
        }
      ]
    },
    "export": {
      "type": "STRING",
      "value": "export"
    },
    "greater_than": {
      "type": "STRING",
      "value": ">"
    },
    "less_than": {
      "type": "STRING",
      "value": "<"
    },
    "greater_than_or_equal": {
      "type": "STRING",
      "value": ">="
    },
    "less_than_or_equal": {
      "type": "STRING",
      "value": "<="
    },
    "not": {
      "type": "STRING",
      "value": "!"
    },
    "and": {
      "type": "STRING",
      "value": "&&"
    },
    "or": {
      "type": "STRING",
      "value": "||"
    },
    "id": {
      "type": "PATTERN",
      "value": "[a-zA-Z_][a-zA-Z0-9_]*"
    },
    "module_name": {
      "type": "PATTERN",
      "value": "[a-zA-Z_][a-zA-Z0-9_]*"
    },
    "function_name": {
      "type": "PATTERN",
      "value": "[a-zA-Z_][a-zA-Z0-9_]*"
    },
    "struct_name": {
      "type": "PATTERN",
      "value": "[a-zA-Z_][a-zA-Z0-9_]*"
    },
    "enum_name": {
      "type": "PATTERN",
      "value": "[a-zA-Z_][a-zA-Z0-9_]*"
    },
    "contract_name": {
      "type": "PATTERN",
      "value": "[a-zA-Z_][a-zA-Z0-9_]*"
    },
    "tvar_name": {
      "type": "PATTERN",
      "value": "[a-zA-Z_][a-zA-Z0-9_]*"
    },
    "nat": {
      "type": "CHOICE",
      "members": [
        {
          "type": "STRING",
          "value": "0"
        },
        {
          "type": "PATTERN",
          "value": "[1-9][0-9]*"
        }
      ]
    },
    "str": {
      "type": "TOKEN",
      "content": {
        "type": "PATTERN",
        "value": "\"[^\"]*\""
      }
    },
    "file": {
      "type": "TOKEN",
      "content": {
        "type": "PATTERN",
        "value": "\"[^\"]*\""
      }
    },
    "version": {
      "type": "PATTERN",
      "value": "[0-9]+(\\.[0-9]+){0,2}"
    }
  },
  "extras": [
    {
      "type": "PATTERN",
      "value": "\\s"
    }
  ],
  "conflicts": [],
  "precedences": [],
  "externals": [],
  "inline": [],
  "supertypes": [],
  "reserved": {}
}